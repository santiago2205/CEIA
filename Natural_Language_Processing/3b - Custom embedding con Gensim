{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"3b - Custom embedding con Gensim","provenance":[{"file_id":"1_oq_QiUQrEXYdA_1uM7zwOINSUGM1h_u","timestamp":1631232799087},{"file_id":"1izqGTp_6uFCtjlyXS_p9HTXm-m9t9T10","timestamp":1605372743977}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"sZd5yLnnHOK0"},"source":["<a href=\"https://www.inove.com.ar\"><img src=\"https://github.com/hernancontigiani/ceia_memorias_especializacion/raw/master/Figures/logoFIUBA.jpg\" width=\"500\" align=\"center\"></a>\n","\n","\n","# Procesamiento de lenguaje natural\n","## Custom embedddings con Gensim\n","\n"]},{"cell_type":"markdown","metadata":{"id":"vA7nqkumo9z9"},"source":["### Objetivo\n","El objetivo es utilizar documentos / corpus para crear embeddings de palabras basado en ese contexto. Se utilizará canciones de bandas para generar los embeddings, es decir, que los vectores tendrán la forma en función de como esa banda haya utilizado las palabras en sus canciones."]},{"cell_type":"code","metadata":{"id":"lFToQs5FK5uZ","executionInfo":{"status":"ok","timestamp":1632401635094,"user_tz":180,"elapsed":1732,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}}},"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","import multiprocessing\n","from gensim.models import Word2Vec"],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"g07zJxG7H9vG"},"source":["### Datos\n","Utilizaremos como dataset canciones de bandas de habla inglés."]},{"cell_type":"code","metadata":{"id":"l7z4CSBfpR3X","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632402385935,"user_tz":180,"elapsed":4407,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}},"outputId":"a908447d-74ab-480b-bf9a-535dc27d8007"},"source":["# Descargar la carpeta de dataset\n","import os\n","import gdown\n","if os.access('./songs_dataset', os.F_OK) is False:\n","    if os.access('simpsons_dataset.zip', os.F_OK) is False:\n","        url = 'https://drive.google.com/uc?id=1VLVgb3fD02XrF2V5OruKvQTOT91juXcs&export=download'\n","        output = 'songs_dataset.zip'\n","        gdown.download(url, output, quiet=False)\n","    !unzip -q songs_dataset.zip   \n","else:\n","    print(\"El dataset ya se encuentra descargado\")"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stderr","text":["Downloading...\n","From: https://drive.google.com/uc?id=1VLVgb3fD02XrF2V5OruKvQTOT91juXcs&export=download\n","To: /content/songs_dataset.zip\n","100%|██████████| 2.09M/2.09M [00:00<00:00, 104MB/s]\n"]}]},{"cell_type":"code","metadata":{"id":"mysGrIw9ljC2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632403233473,"user_tz":180,"elapsed":624,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}},"outputId":"376a994a-f631-460d-c14f-6e6e928b7da9"},"source":["# Posibles bandas\n","os.listdir(\"./songs_dataset/\")"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['dr-seuss.txt',\n"," 'janisjoplin.txt',\n"," 'cake.txt',\n"," 'bob-marley.txt',\n"," 'r-kelly.txt',\n"," 'britney-spears.txt',\n"," 'nickelback.txt',\n"," 'lin-manuel-miranda.txt',\n"," 'notorious-big.txt',\n"," 'bjork.txt',\n"," 'paul-simon.txt',\n"," 'nicki-minaj.txt',\n"," 'ludacris.txt',\n"," 'alicia-keys.txt',\n"," 'dolly-parton.txt',\n"," 'bob-dylan.txt',\n"," 'Kanye_West.txt',\n"," 'blink-182.txt',\n"," 'amy-winehouse.txt',\n"," 'rihanna.txt',\n"," 'leonard-cohen.txt',\n"," 'bruno-mars.txt',\n"," 'lady-gaga.txt',\n"," 'jimi-hendrix.txt',\n"," 'patti-smith.txt',\n"," 'nursery_rhymes.txt',\n"," 'kanye-west.txt',\n"," 'eminem.txt',\n"," 'al-green.txt',\n"," 'kanye.txt',\n"," 'notorious_big.txt',\n"," 'beatles.txt',\n"," 'missy-elliott.txt',\n"," 'bruce-springsteen.txt',\n"," 'radiohead.txt',\n"," 'adele.txt',\n"," 'lil-wayne.txt',\n"," 'michael-jackson.txt',\n"," 'lorde.txt',\n"," 'dickinson.txt',\n"," 'bieber.txt',\n"," 'prince.txt',\n"," 'Lil_Wayne.txt',\n"," 'disney.txt',\n"," 'dj-khaled.txt',\n"," 'nirvana.txt',\n"," 'joni-mitchell.txt',\n"," 'johnny-cash.txt',\n"," 'drake.txt']"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"ticoqYD1Z3I7","colab":{"base_uri":"https://localhost:8080/","height":257},"executionInfo":{"status":"ok","timestamp":1632403357382,"user_tz":180,"elapsed":524,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}},"outputId":"1067a3b9-fb66-484f-a172-a7b7a757aac6"},"source":["# Armar el dataset utilizando salto de línea para separar las oraciones/docs\n","df = pd.read_csv('songs_dataset/eminem.txt', sep='/n', header=None)\n","df.head()"],"execution_count":9,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: ParserWarning: Falling back to the 'python' engine because the 'c' engine does not support regex separators (separators > 1 char and different from '\\s+' are interpreted as regex); you can avoid this warning by specifying engine='python'.\n","  \n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Look, I was gonna go easy on you and not to hu...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>But I'm only going to get this one chance</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Something's wrong, I can feel it (Six minutes,...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Just a feeling I've got, like something's abou...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>If that means, what I think it means, we're in...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                   0\n","0  Look, I was gonna go easy on you and not to hu...\n","1          But I'm only going to get this one chance\n","2  Something's wrong, I can feel it (Six minutes,...\n","3  Just a feeling I've got, like something's abou...\n","4  If that means, what I think it means, we're in..."]},"metadata":{},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"LEpKubK9XzXN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632403363771,"user_tz":180,"elapsed":533,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}},"outputId":"c0af5434-cc5a-439a-91d4-acfa6b7b2545"},"source":["print(\"Cantidad de documentos:\", df.shape[0])"],"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Cantidad de documentos: 6812\n"]}]},{"cell_type":"markdown","metadata":{"id":"ab94qaFlrA1G"},"source":["### 1 - Preprocesamiento"]},{"cell_type":"code","metadata":{"id":"rIsmMWmjrDHd","executionInfo":{"status":"ok","timestamp":1632403371660,"user_tz":180,"elapsed":994,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}}},"source":["from keras.preprocessing.text import text_to_word_sequence\n","\n","sentence_tokens = []\n","# Recorrer todas las filas y transformar las oraciones\n","# en una secuencia de palabras (esto podría realizarse con NLTK o spaCy también)\n","for _, row in df[:None].iterrows():\n","    sentence_tokens.append(text_to_word_sequence(row[0]))"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"id":"CHepi_DGrbhq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632403379207,"user_tz":180,"elapsed":398,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}},"outputId":"51d2dd4e-2d41-4e2b-e26a-79e2173e40c2"},"source":["# Demos un vistazo\n","sentence_tokens[:2]"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[['look',\n","  'i',\n","  'was',\n","  'gonna',\n","  'go',\n","  'easy',\n","  'on',\n","  'you',\n","  'and',\n","  'not',\n","  'to',\n","  'hurt',\n","  'your',\n","  'feelings'],\n"," ['but', \"i'm\", 'only', 'going', 'to', 'get', 'this', 'one', 'chance']]"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","metadata":{"id":"BaXV6nlHr5Aa"},"source":["### 2 - Crear los vectores (word2vec)"]},{"cell_type":"code","metadata":{"id":"OSb0v7h8r7hK","executionInfo":{"status":"ok","timestamp":1632403403233,"user_tz":180,"elapsed":559,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}}},"source":["from gensim.models.callbacks import CallbackAny2Vec\n","# Durante el entrenamiento gensim por defecto no informa el \"loss\" en cada época\n","# Sobracargamos el callback para poder tener esta información\n","class callback(CallbackAny2Vec):\n","    \"\"\"\n","    Callback to print loss after each epoch\n","    \"\"\"\n","    def __init__(self):\n","        self.epoch = 0\n","\n","    def on_epoch_end(self, model):\n","        loss = model.get_latest_training_loss()\n","        if self.epoch == 0:\n","            print('Loss after epoch {}: {}'.format(self.epoch, loss))\n","        else:\n","            print('Loss after epoch {}: {}'.format(self.epoch, loss- self.loss_previous_step))\n","        self.epoch += 1\n","        self.loss_previous_step = loss"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"id":"i0wnDdv9sJ47","executionInfo":{"status":"ok","timestamp":1632403420869,"user_tz":180,"elapsed":409,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}}},"source":["# Crearmos el modelo generador de vectoeres\n","# En este caso utilizaremos la estructura modelo Skipgram\n","w2v_model = Word2Vec(min_count=5,    # frecuencia mínima de palabra para incluirla en el vocabulario\n","                     window=2,       # cant de palabras antes y desp de la predicha\n","                     size=300,       # dimensionalidad de los vectores \n","                     negative=20,    # cantidad de negative samples... 0 es no se usa\n","                     workers=1,      # si tienen más cores pueden cambiar este valor\n","                     sg=1)           # modelo 0:CBOW  1:skipgram"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"id":"5lTt8wErsf17","executionInfo":{"status":"ok","timestamp":1632403426201,"user_tz":180,"elapsed":412,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}}},"source":["# Buildear el vocabularui con los tokens\n","w2v_model.build_vocab(sentence_tokens)"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"id":"TNc9qt4os5AT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632403431435,"user_tz":180,"elapsed":406,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}},"outputId":"cd005f98-702e-4820-b19e-7ec599c885cb"},"source":["# Cantidad de filas/docs encontradas en el corpus\n","print(\"Cantidad de docs en el corpus:\", w2v_model.corpus_count)"],"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Cantidad de docs en el corpus: 6812\n"]}]},{"cell_type":"code","metadata":{"id":"idw9cHF3tSMl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632403435474,"user_tz":180,"elapsed":412,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}},"outputId":"c335feb1-38fe-4c1c-fc0e-181dfdfd32e3"},"source":["# Cantidad de words encontradas en el corpus\n","print(\"Cantidad de words distintas en el corpus:\", len(w2v_model.wv.vocab))"],"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Cantidad de words distintas en el corpus: 1347\n"]}]},{"cell_type":"markdown","metadata":{"id":"fC9mZ8DPk-UC"},"source":["### 3 - Entrenar el modelo generador"]},{"cell_type":"code","metadata":{"id":"QSp-x0PAsq56","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632403559866,"user_tz":180,"elapsed":101363,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}},"outputId":"214a439d-33c3-407b-eecd-b42c84e05c2b"},"source":["# Entrenamos el modelo generador de vectores\n","# Utilizamos nuestro callback\n","w2v_model.train(sentence_tokens,\n","                 total_examples=w2v_model.corpus_count,\n","                 epochs=200,\n","                 compute_loss = True,\n","                 callbacks=[callback()]\n","                 )"],"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Loss after epoch 0: 294412.46875\n","Loss after epoch 1: 286618.40625\n","Loss after epoch 2: 277185.5625\n","Loss after epoch 3: 267922.3125\n","Loss after epoch 4: 249421.75\n","Loss after epoch 5: 245564.0\n","Loss after epoch 6: 244411.375\n","Loss after epoch 7: 240618.625\n","Loss after epoch 8: 224386.5\n","Loss after epoch 9: 220944.5\n","Loss after epoch 10: 220895.75\n","Loss after epoch 11: 218720.25\n","Loss after epoch 12: 216558.5\n","Loss after epoch 13: 216932.75\n","Loss after epoch 14: 217325.75\n","Loss after epoch 15: 214059.0\n","Loss after epoch 16: 214873.25\n","Loss after epoch 17: 208268.25\n","Loss after epoch 18: 197043.0\n","Loss after epoch 19: 199216.0\n","Loss after epoch 20: 197753.5\n","Loss after epoch 21: 197435.5\n","Loss after epoch 22: 196389.5\n","Loss after epoch 23: 198372.5\n","Loss after epoch 24: 196242.5\n","Loss after epoch 25: 196494.5\n","Loss after epoch 26: 195525.0\n","Loss after epoch 27: 196392.5\n","Loss after epoch 28: 192910.0\n","Loss after epoch 29: 196142.5\n","Loss after epoch 30: 195628.0\n","Loss after epoch 31: 195247.5\n","Loss after epoch 32: 193995.0\n","Loss after epoch 33: 194340.0\n","Loss after epoch 34: 192733.0\n","Loss after epoch 35: 194083.5\n","Loss after epoch 36: 193498.0\n","Loss after epoch 37: 193069.5\n","Loss after epoch 38: 193151.5\n","Loss after epoch 39: 180599.0\n","Loss after epoch 40: 179369.0\n","Loss after epoch 41: 177711.0\n","Loss after epoch 42: 179476.0\n","Loss after epoch 43: 177561.0\n","Loss after epoch 44: 177109.0\n","Loss after epoch 45: 177921.0\n","Loss after epoch 46: 178159.0\n","Loss after epoch 47: 178568.0\n","Loss after epoch 48: 178779.0\n","Loss after epoch 49: 177157.0\n","Loss after epoch 50: 177178.0\n","Loss after epoch 51: 177564.0\n","Loss after epoch 52: 177396.0\n","Loss after epoch 53: 176734.0\n","Loss after epoch 54: 176959.0\n","Loss after epoch 55: 178003.0\n","Loss after epoch 56: 176522.0\n","Loss after epoch 57: 177135.0\n","Loss after epoch 58: 177040.0\n","Loss after epoch 59: 177419.0\n","Loss after epoch 60: 176227.0\n","Loss after epoch 61: 175876.0\n","Loss after epoch 62: 176580.0\n","Loss after epoch 63: 176408.0\n","Loss after epoch 64: 177116.0\n","Loss after epoch 65: 176655.0\n","Loss after epoch 66: 176134.0\n","Loss after epoch 67: 175436.0\n","Loss after epoch 68: 175326.0\n","Loss after epoch 69: 177487.0\n","Loss after epoch 70: 175725.0\n","Loss after epoch 71: 174781.0\n","Loss after epoch 72: 174992.0\n","Loss after epoch 73: 176069.0\n","Loss after epoch 74: 176016.0\n","Loss after epoch 75: 175681.0\n","Loss after epoch 76: 174513.0\n","Loss after epoch 77: 175496.0\n","Loss after epoch 78: 175064.0\n","Loss after epoch 79: 174538.0\n","Loss after epoch 80: 173114.0\n","Loss after epoch 81: 172977.0\n","Loss after epoch 82: 174124.0\n","Loss after epoch 83: 174488.0\n","Loss after epoch 84: 173636.0\n","Loss after epoch 85: 174032.0\n","Loss after epoch 86: 167336.0\n","Loss after epoch 87: 157640.0\n","Loss after epoch 88: 156204.0\n","Loss after epoch 89: 157490.0\n","Loss after epoch 90: 157878.0\n","Loss after epoch 91: 157374.0\n","Loss after epoch 92: 157108.0\n","Loss after epoch 93: 157206.0\n","Loss after epoch 94: 156374.0\n","Loss after epoch 95: 158168.0\n","Loss after epoch 96: 155204.0\n","Loss after epoch 97: 156150.0\n","Loss after epoch 98: 155534.0\n","Loss after epoch 99: 156902.0\n","Loss after epoch 100: 155424.0\n","Loss after epoch 101: 156520.0\n","Loss after epoch 102: 155490.0\n","Loss after epoch 103: 155458.0\n","Loss after epoch 104: 155854.0\n","Loss after epoch 105: 156560.0\n","Loss after epoch 106: 156012.0\n","Loss after epoch 107: 154858.0\n","Loss after epoch 108: 153764.0\n","Loss after epoch 109: 156252.0\n","Loss after epoch 110: 156442.0\n","Loss after epoch 111: 153954.0\n","Loss after epoch 112: 155250.0\n","Loss after epoch 113: 154188.0\n","Loss after epoch 114: 154522.0\n","Loss after epoch 115: 153256.0\n","Loss after epoch 116: 153618.0\n","Loss after epoch 117: 154314.0\n","Loss after epoch 118: 152968.0\n","Loss after epoch 119: 153120.0\n","Loss after epoch 120: 153906.0\n","Loss after epoch 121: 152418.0\n","Loss after epoch 122: 155234.0\n","Loss after epoch 123: 154200.0\n","Loss after epoch 124: 152172.0\n","Loss after epoch 125: 154108.0\n","Loss after epoch 126: 153092.0\n","Loss after epoch 127: 152840.0\n","Loss after epoch 128: 153086.0\n","Loss after epoch 129: 153310.0\n","Loss after epoch 130: 152418.0\n","Loss after epoch 131: 153312.0\n","Loss after epoch 132: 152580.0\n","Loss after epoch 133: 152338.0\n","Loss after epoch 134: 151360.0\n","Loss after epoch 135: 151164.0\n","Loss after epoch 136: 152356.0\n","Loss after epoch 137: 150896.0\n","Loss after epoch 138: 150672.0\n","Loss after epoch 139: 149110.0\n","Loss after epoch 140: 150178.0\n","Loss after epoch 141: 150622.0\n","Loss after epoch 142: 151380.0\n","Loss after epoch 143: 151262.0\n","Loss after epoch 144: 150298.0\n","Loss after epoch 145: 150100.0\n","Loss after epoch 146: 151002.0\n","Loss after epoch 147: 151654.0\n","Loss after epoch 148: 150432.0\n","Loss after epoch 149: 149980.0\n","Loss after epoch 150: 149788.0\n","Loss after epoch 151: 149222.0\n","Loss after epoch 152: 149394.0\n","Loss after epoch 153: 149404.0\n","Loss after epoch 154: 149860.0\n","Loss after epoch 155: 146758.0\n","Loss after epoch 156: 148470.0\n","Loss after epoch 157: 148770.0\n","Loss after epoch 158: 148810.0\n","Loss after epoch 159: 148888.0\n","Loss after epoch 160: 149230.0\n","Loss after epoch 161: 149072.0\n","Loss after epoch 162: 147440.0\n","Loss after epoch 163: 149142.0\n","Loss after epoch 164: 148238.0\n","Loss after epoch 165: 147820.0\n","Loss after epoch 166: 147420.0\n","Loss after epoch 167: 148502.0\n","Loss after epoch 168: 147828.0\n","Loss after epoch 169: 148238.0\n","Loss after epoch 170: 146682.0\n","Loss after epoch 171: 148404.0\n","Loss after epoch 172: 147504.0\n","Loss after epoch 173: 147410.0\n","Loss after epoch 174: 147094.0\n","Loss after epoch 175: 147366.0\n","Loss after epoch 176: 145708.0\n","Loss after epoch 177: 148678.0\n","Loss after epoch 178: 146718.0\n","Loss after epoch 179: 146944.0\n","Loss after epoch 180: 145294.0\n","Loss after epoch 181: 146478.0\n","Loss after epoch 182: 146376.0\n","Loss after epoch 183: 145920.0\n","Loss after epoch 184: 145424.0\n","Loss after epoch 185: 145192.0\n","Loss after epoch 186: 145336.0\n","Loss after epoch 187: 145736.0\n","Loss after epoch 188: 145422.0\n","Loss after epoch 189: 145510.0\n","Loss after epoch 190: 144416.0\n","Loss after epoch 191: 145064.0\n","Loss after epoch 192: 144130.0\n","Loss after epoch 193: 145058.0\n","Loss after epoch 194: 144444.0\n","Loss after epoch 195: 144396.0\n","Loss after epoch 196: 145228.0\n","Loss after epoch 197: 140246.0\n","Loss after epoch 198: 123812.0\n","Loss after epoch 199: 124400.0\n"]},{"output_type":"execute_result","data":{"text/plain":["(7860111, 12967600)"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","metadata":{"id":"ddT9NVuNlCAe"},"source":["### 4 - Ensayar"]},{"cell_type":"code","metadata":{"id":"6cHN9xGLuPEm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632403600297,"user_tz":180,"elapsed":400,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}},"outputId":"f2c325d2-5e2a-4e68-d4bb-465c2cc3e9b7"},"source":["# Palabras que MÁS se relacionan con...:\n","w2v_model.wv.most_similar(positive=[\"mom\"], topn=10)"],"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('tits', 0.4091681241989136),\n"," ('loved', 0.40167903900146484),\n"," (\"cleanin'\", 0.3937366008758545),\n"," ('cleaning', 0.3690164089202881),\n"," ('pad', 0.36394357681274414),\n"," (\"tellin'\", 0.36084046959877014),\n"," ('lots', 0.3606754541397095),\n"," ('valium', 0.3579758405685425),\n"," ('da', 0.3473178744316101),\n"," ('erica', 0.3397984504699707)]"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","metadata":{"id":"47HiU5gdkdMq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632403614462,"user_tz":180,"elapsed":394,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}},"outputId":"35c48600-1a19-4d86-cf10-1da20351da07"},"source":["# Palabras que MENOS se relacionan con...:\n","w2v_model.wv.most_similar(negative=[\"gay\"], topn=10)"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('lose', 0.023723207414150238),\n"," ('trailer', -0.013743817806243896),\n"," ('in', -0.014555536210536957),\n"," ('free', -0.017330661416053772),\n"," ('tough', -0.020626526325941086),\n"," ('to', -0.024362865835428238),\n"," ('jessica', -0.02504679374396801),\n"," ('nigga', -0.03014908730983734),\n"," ('shut', -0.03299281746149063),\n"," ('block', -0.033933501690626144)]"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"DT4Rvno2mD65","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632403877697,"user_tz":180,"elapsed":401,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}},"outputId":"44ee9b06-4067-46df-889d-a3588739dff0"},"source":["# Palabras que MÁS se relacionan con...:\n","w2v_model.wv.most_similar(positive=[\"god\"], topn=10)"],"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('fack', 0.39879727363586426),\n"," ('stamps', 0.37177741527557373),\n"," ('whatever', 0.3677082657814026),\n"," ('guarantee', 0.3600514531135559),\n"," ('sent', 0.35623782873153687),\n"," ('yea', 0.35289716720581055),\n"," ('swear', 0.3517836332321167),\n"," ('return', 0.34885063767433167),\n"," ('supposed', 0.34180498123168945),\n"," ('lyrical', 0.33367615938186646)]"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","metadata":{"id":"XPLDPgzBmQXt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632403736607,"user_tz":180,"elapsed":411,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}},"outputId":"ec8ecd74-e08c-4a3f-ff48-3e2b3170c26d"},"source":["# Palabras que MÁS se relacionan con...:\n","w2v_model.wv.most_similar(positive=[\"money\"], topn=5)"],"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('pussy', 0.44825446605682373),\n"," ('flip', 0.3873980641365051),\n"," ('grows', 0.3745185136795044),\n"," ('weapon', 0.3711365759372711),\n"," ('pedal', 0.36214450001716614)]"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","metadata":{"id":"L_UvHPMMklOr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1632403793972,"user_tz":180,"elapsed":399,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}},"outputId":"ed096c7f-5652-469a-80cc-6f431002d43c"},"source":["# Ensayar con una palabra que no está en el corpus (en vocab):\n","w2v_model.wv.most_similar(negative=[\"rappers\"])"],"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(\"what's\", 0.03303157538175583),\n"," ('coulda', 0.028113674372434616),\n"," ('leave', 0.020613515749573708),\n"," ('broke', 0.014072118327021599),\n"," ('feed', 0.0031365007162094116),\n"," ('dear', 0.002272326499223709),\n"," ('under', -0.002095633652061224),\n"," (\"sayin'\", -0.004517698660492897),\n"," ('soul', -0.005037818104028702),\n"," ('game', -0.007764376699924469)]"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","metadata":{"id":"vjtbr8xe2UDh"},"source":["Dato curioso, las palabras AK-47 y discrimination por inspeccion visual estan en el vocabulario pero no las reconoce el algoritmo"]},{"cell_type":"markdown","metadata":{"id":"_g8UVWe6lFmh"},"source":["### 5 - Visualizar agrupación de vectores"]},{"cell_type":"code","metadata":{"id":"pDxEVXAivjr9","executionInfo":{"status":"ok","timestamp":1632403882743,"user_tz":180,"elapsed":950,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}}},"source":["from sklearn.decomposition import IncrementalPCA    \n","from sklearn.manifold import TSNE                   \n","import numpy as np                                  \n","\n","def reduce_dimensions(model):\n","    num_dimensions = 2  \n","\n","    vectors = np.asarray(model.wv.vectors)\n","    labels = np.asarray(model.wv.index2word)  \n","\n","    tsne = TSNE(n_components=num_dimensions, random_state=0)\n","    vectors = tsne.fit_transform(vectors)\n","\n","    x_vals = [v[0] for v in vectors]\n","    y_vals = [v[1] for v in vectors]\n","    return x_vals, y_vals, labels"],"execution_count":31,"outputs":[]},{"cell_type":"code","metadata":{"id":"NCCXtDpcugmd","colab":{"base_uri":"https://localhost:8080/","height":562},"executionInfo":{"status":"ok","timestamp":1632403905086,"user_tz":180,"elapsed":17627,"user":{"displayName":"Santiago Rivier","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiXZp2rZ11w7DiPMRUtqTp1TalDmUxtfsNtSvHcrQ=s64","userId":"02114253809716218523"}},"outputId":"c1282a5f-3cf0-40fa-b8ed-3e6c5f53e19b"},"source":["# Graficar los embedddings en 2D\n","import plotly.graph_objects as go\n","import plotly.express as px\n","\n","x_vals, y_vals, labels = reduce_dimensions(w2v_model)\n","\n","MAX_WORDS=200\n","fig = px.scatter(x=x_vals[:MAX_WORDS], y=y_vals[:MAX_WORDS], text=labels[:MAX_WORDS])\n","fig.show(renderer=\"colab\") # esto para plotly en colab\n"],"execution_count":32,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>\n","            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>\n","                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>    \n","            <div id=\"1fed57de-cc48-4dcd-a747-20293ff8b41f\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n","            <script type=\"text/javascript\">\n","                \n","                    window.PLOTLYENV=window.PLOTLYENV || {};\n","                    \n","                if (document.getElementById(\"1fed57de-cc48-4dcd-a747-20293ff8b41f\")) {\n","                    Plotly.newPlot(\n","                        '1fed57de-cc48-4dcd-a747-20293ff8b41f',\n","                        [{\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"x=%{x}<br>y=%{y}<br>text=%{text}\", \"legendgroup\": \"\", \"marker\": {\"color\": \"#636efa\", \"symbol\": \"circle\"}, \"mode\": \"markers+text\", \"name\": \"\", \"showlegend\": false, \"text\": [\"i\", \"the\", \"you\", \"to\", \"a\", \"and\", \"my\", \"i'm\", \"it\", \"me\", \"in\", \"that\", \"like\", \"of\", \"this\", \"but\", \"just\", \"so\", \"on\", \"is\", \"your\", \"don't\", \"up\", \"with\", \"get\", \"for\", \"be\", \"it's\", \"no\", \"all\", \"know\", \"what\", \"now\", \"out\", \"when\", \"they\", \"was\", \"not\", \"fuck\", \"ain't\", \"got\", \"go\", \"at\", \"can\", \"back\", \"if\", \"shit\", \"we\", \"he\", \"do\", \"one\", \"from\", \"'cause\", \"as\", \"never\", \"see\", \"think\", \"say\", \"his\", \"make\", \"you're\", \"off\", \"oh\", \"that's\", \"way\", \"down\", \"who\", \"her\", \"have\", \"can't\", \"take\", \"right\", \"ass\", \"bitch\", \"too\", \"or\", \"name\", \"let\", \"want\", \"love\", \"then\", \"are\", \"i'll\", \"these\", \"time\", \"am\", \"how\", \"been\", \"shady\", \"'em\", \"even\", \"why\", \"feel\", \"him\", \"yeah\", \"baby\", \"man\", \"cause\", \"gonna\", \"come\", \"still\", \"slim\", \"about\", \"he's\", \"look\", \"wanna\", \"little\", \"some\", \"through\", \"could\", \"an\", \"only\", \"did\", \"life\", \"girl\", \"over\", \"here\", \"put\", \"give\", \"better\", \"more\", \"need\", \"had\", \"said\", \"there\", \"i've\", \"she\", \"everybody\", \"by\", \"stand\", \"fuckin'\", \"aah\", \"them\", \"ever\", \"fucking\", \"tell\", \"rap\", \"god\", \"bad\", \"again\", \"crazy\", \"world\", \"will\", \"nothing\", \"before\", \"us\", \"try\", \"stop\", \"maybe\", \"would\", \"hear\", \"new\", \"keep\", \"where\", \"own\", \"please\", \"really\", \"something\", \"every\", \"made\", \"same\", \"blow\", \"day\", \"around\", \"gotta\", \"call\", \"into\", \"'til\", \"head\", \"there's\", \"won't\", \"boy\", \"mom\", \"yo\", \"didn't\", \"well\", \"face\", \"white\", \"shot\", \"real\", \"gone\", \"once\", \"comes\", \"guess\", \"thing\", \"night\", \"ya\", \"while\", \"lose\", \"two\", \"let's\", \"shake\", \"people\", \"hit\", \"yourself\", \"show\", \"ha\", \"find\", \"going\", \"goes\"], \"type\": \"scatter\", \"x\": [-3.395078659057617, -3.0128250122070312, -3.478511333465576, -3.2788078784942627, -2.9658713340759277, -3.1793007850646973, -2.9456593990325928, -2.9757955074310303, -3.424562931060791, -3.322726011276245, -2.832214593887329, -3.2958240509033203, -3.048931360244751, -2.5975492000579834, -2.8731822967529297, -3.3437342643737793, -3.22749662399292, -3.1426539421081543, -2.978722333908081, -2.9720680713653564, -3.059750556945801, -3.691319227218628, -2.7335431575775146, -2.853698968887329, -3.500652313232422, -2.9031076431274414, -3.5214505195617676, -2.832258462905884, -2.8830416202545166, -3.0772275924682617, -3.6692428588867188, -3.4193146228790283, -2.5021989345550537, -2.874924898147583, -3.402261734008789, -3.7045929431915283, -3.6593995094299316, -3.070953130722046, -3.3030776977539062, -3.0108656883239746, -3.054293394088745, -2.755715847015381, -2.4417507648468018, -4.123830318450928, -2.611330270767212, -3.679006576538086, -3.213214635848999, -3.914647102355957, -3.811520576477051, -3.451209306716919, -2.6441988945007324, 0.6452614665031433, -3.151806354522705, -9.072168350219727, -4.219919681549072, -4.389788627624512, -4.283357620239258, -3.893413543701172, -2.8061790466308594, -3.411539077758789, -4.652493953704834, -2.7550835609436035, -1.8398027420043945, -2.3024532794952393, -3.336758852005005, -1.612611174583435, -4.890390396118164, -3.129638195037842, -3.2497639656066895, -4.1700944900512695, -4.693843841552734, -2.0642006397247314, -3.5415353775024414, -4.517758369445801, -3.9699349403381348, -3.702077865600586, -1.3842583894729614, -3.646502733230591, -4.093895435333252, -2.967564582824707, -3.3111631870269775, -3.6340079307556152, -4.032017707824707, -2.7093441486358643, -3.7028985023498535, -2.5090298652648926, -3.846020460128784, 5.378735542297363, -9.311503410339355, -3.7170727252960205, -3.335998058319092, -4.186099529266357, 4.5848894119262695, -3.3346095085144043, -3.1774985790252686, -3.627774238586426, -4.055898666381836, -3.5646133422851562, -3.428354024887085, -3.691443920135498, -3.420387029647827, -9.206271171569824, -3.1810364723205566, -1.496954083442688, -4.440954208374023, -3.649379014968872, -3.676116704940796, -4.917361259460449, -5.779831886291504, -4.845432758331299, -5.601425647735596, 1.717267632484436, -4.004645824432373, -4.060163974761963, 0.12309570610523224, -5.016854763031006, -2.357185125350952, -2.4592440128326416, -4.460944652557373, 4.680438995361328, -0.9588118195533752, -3.4370319843292236, -6.497720241546631, -3.786484718322754, -4.743776798248291, 5.54146146774292, -4.343064308166504, -0.2687576711177826, -2.9554643630981445, -0.957248330116272, -2.992584466934204, 1.4154092073440552, -3.640697717666626, -3.7345333099365234, -2.005030632019043, -4.559671401977539, 8.0289888381958, -8.744684219360352, 2.852879047393799, -1.9752123355865479, -3.436797618865967, -8.697901725769043, -7.659126281738281, -2.223379373550415, -2.06396222114563, -7.2849812507629395, -6.171544075012207, -7.749736309051514, 2.136176109313965, -6.43446683883667, -3.8655033111572266, 0.029096586629748344, -3.393555164337158, -4.634051322937012, -0.6227843165397644, -1.4991108179092407, -5.048027515411377, -6.403017520904541, -3.6885392665863037, -8.25057315826416, -3.114760637283325, -2.6628611087799072, -2.374293804168701, -3.639251708984375, -4.586097717285156, -5.061062812805176, -4.7122907638549805, 0.8890093564987183, -0.6699175834655762, -4.49101448059082, -4.328807353973389, -6.075281143188477, 0.08400677889585495, 1.8493809700012207, -4.925468921661377, -5.276548862457275, -3.20375394821167, 2.4455528259277344, 1.3774539232254028, -7.541991710662842, 0.4665774405002594, -5.779439449310303, -2.2620861530303955, -6.976894378662109, -4.8270721435546875, -6.593455791473389, -6.978868007659912, -8.13098430633545, -6.06207275390625, 0.6606367230415344, -3.337294340133667, -3.1721577644348145, -4.4709038734436035, -4.051874160766602, 3.325253486633301, -4.635952472686768, -0.13181371986865997, 3.671555280685425, -6.308881759643555, -1.7477917671203613], \"xaxis\": \"x\", \"y\": [1.0099756717681885, 0.7952301502227783, 0.935733437538147, 0.9052819609642029, 0.7489433884620667, 0.8245005011558533, 1.0723438262939453, 1.0748835802078247, 0.9116761684417725, 0.9423165917396545, 0.6702362298965454, 0.8435263633728027, 0.8053134083747864, 0.9741685390472412, 1.0203622579574585, 1.1704729795455933, 0.88725745677948, 1.0140368938446045, 0.7640541791915894, 1.3309671878814697, 0.8712252378463745, 1.076295018196106, 0.2303234487771988, 0.5027656555175781, 1.0361567735671997, 1.2950944900512695, 1.0120893716812134, 1.2817041873931885, 1.8799846172332764, 1.0908124446868896, 1.4406843185424805, 1.2006282806396484, 1.003110408782959, 0.8123043179512024, 1.0289685726165771, 0.9817812442779541, 1.2849948406219482, 1.4029903411865234, 0.7825140953063965, 0.9551584720611572, 1.3780032396316528, 0.7281327843666077, 0.9953311681747437, 0.9374560713768005, 0.4608340859413147, 0.941123902797699, 0.9588509202003479, 1.4652987718582153, 1.2878469228744507, 1.4403581619262695, 1.6498079299926758, -3.1770808696746826, 1.5605851411819458, 0.885524570941925, 0.8549704551696777, 1.4539049863815308, 1.6194757223129272, 1.25668466091156, 0.316715806722641, 1.2687586545944214, -0.6570453643798828, 0.3148253262042999, 1.311885952949524, 3.1776340007781982, 0.5456884503364563, 5.831118583679199, 1.5721642971038818, 0.052851539105176926, 2.248533248901367, 0.32959693670272827, 1.519026756286621, 0.26813483238220215, -4.443377494812012, 1.0640462636947632, 0.4931316077709198, 1.270605206489563, 2.8136332035064697, 0.7118300795555115, 0.8493515849113464, 2.1796975135803223, 0.23719526827335358, -3.025073766708374, 0.10181878507137299, 1.1744904518127441, 3.3753695487976074, 1.564980149269104, 0.4272613227367401, -0.18259656429290771, -2.9276058673858643, 0.86580890417099, 0.6122589707374573, 1.7613394260406494, 1.1178302764892578, 0.44389230012893677, 1.9587287902832031, 1.8355776071548462, 0.23498988151550293, 1.400957703590393, 0.5216261744499207, 2.716917037963867, 0.23982957005500793, -2.930410385131836, 2.4491379261016846, 3.7335283756256104, 2.313650608062744, 0.3423890769481659, 0.27556759119033813, 0.5985442996025085, -6.255680084228516, 1.8607165813446045, 0.02346635051071644, 5.660904407501221, 2.7215688228607178, 1.9969313144683838, 2.2716708183288574, 5.0210161209106445, 1.4856750965118408, 1.5049737691879272, 1.9574036598205566, -3.9543395042419434, 4.384043216705322, 1.973259687423706, 1.4899120330810547, 2.2240943908691406, 1.1435902118682861, -0.19206079840660095, 0.42860057950019836, -0.1845962405204773, 0.2352868616580963, -2.1852431297302246, 0.07292212545871735, 1.722278356552124, 0.7537629008293152, 2.396714687347412, 1.9588391780853271, 1.5946760177612305, 1.124374508857727, 1.4580838680267334, 3.69342041015625, 0.4662472903728485, -1.1941474676132202, 1.932145118713379, -3.4508237838745117, 4.163971900939941, 0.005671792197972536, 3.7097971439361572, 1.765787124633789, 4.561063289642334, 5.61127233505249, 2.7753543853759766, 3.832357883453369, -4.962767601013184, -0.17491798102855682, 0.8962562680244446, 8.579035758972168, 4.859724998474121, 1.775701642036438, 3.515200138092041, 4.0679931640625, 1.2684385776519775, -0.1391335278749466, 1.7056493759155273, 0.8003664016723633, 3.1697640419006348, -0.30184751749038696, 1.5072885751724243, 6.735583305358887, 5.716176509857178, -6.916053295135498, 2.3973758220672607, -1.2720967531204224, 4.210873126983643, 4.098573684692383, 5.7331318855285645, 0.8749797940254211, 4.7454447746276855, -0.8617246150970459, 2.0213589668273926, 6.071730136871338, -2.5364136695861816, 1.663734793663025, 4.6504130363464355, 3.3740901947021484, 2.821077823638916, 7.504149436950684, -3.340566635131836, 4.847010135650635, -2.386261224746704, -6.8825273513793945, 8.672779083251953, -1.2625796794891357, -5.324077129364014, 1.2834855318069458, -5.2043867111206055, 7.575166702270508, 2.3789021968841553, 4.13704252243042, -0.1703292280435562, 5.103699684143066, 0.6705541610717773], \"yaxis\": \"y\"}],\n","                        {\"legend\": {\"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"x\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"y\"}}},\n","                        {\"responsive\": true}\n","                    ).then(function(){\n","                            \n","var gd = document.getElementById('1fed57de-cc48-4dcd-a747-20293ff8b41f');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })\n","                };\n","                \n","            </script>\n","        </div>\n","</body>\n","</html>"]},"metadata":{}}]}]}